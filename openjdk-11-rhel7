# Copyright 2019 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ------------------------------------------------------------------------
#
# This is a Dockerfile for the openjdk/openjdk-11-rhel7:1.1 image.


## START target image openjdk/openjdk-11-rhel7:1.1
## \
    FROM registry.redhat.io/rhel7/rhel

    USER root

###### START module 'jboss.container.user:1.0'
###### \
        # Copy 'jboss.container.user' module content
        COPY modules/jboss.container.user /tmp/scripts/jboss.container.user
        # Switch to 'root' user to install 'jboss.container.user' module defined packages
        USER root
        # Install packages defined in the 'jboss.container.user' module
        RUN yum --setopt=tsflags=nodocs install -y unzip tar rsync shadow-utils \
            && rpm -q unzip tar rsync shadow-utils
        # Set 'jboss.container.user' module defined environment variables
        ENV \
            HOME="/home/jboss" 
        # Custom scripts from 'jboss.container.user' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.user/configure.sh" ]
###### /
###### END module 'jboss.container.user:1.0'

###### START module 'jboss.container.openjdk.jdk:11'
###### \
        # Copy 'jboss.container.openjdk.jdk' module content
        COPY modules/jboss.container.openjdk.jdk /tmp/scripts/jboss.container.openjdk.jdk
        # Switch to 'root' user to install 'jboss.container.openjdk.jdk' module defined packages
        USER root
        # Install packages defined in the 'jboss.container.openjdk.jdk' module
        RUN yum --setopt=tsflags=nodocs install -y java-11-openjdk-devel \
            && rpm -q java-11-openjdk-devel
        # Set 'jboss.container.openjdk.jdk' module defined environment variables
        ENV \
            JAVA_HOME="/usr/lib/jvm/java-11" \
            JAVA_VENDOR="openjdk" \
            JAVA_VERSION="11" \
            JBOSS_CONTAINER_OPENJDK_JDK_MODULE="/opt/jboss/container/openjdk/jdk" 
        # Set 'jboss.container.openjdk.jdk' module defined labels
        LABEL \
            org.jboss.product="openjdk"  \
            org.jboss.product.openjdk.version="11"  \
            org.jboss.product.version="11" 
        # Custom scripts from 'jboss.container.openjdk.jdk' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.openjdk.jdk/configure.sh" ]
###### /
###### END module 'jboss.container.openjdk.jdk:11'

###### START module 'jboss.container.prometheus:7'
###### \
        # Copy 'jboss.container.prometheus' module general artifacts
        COPY \
            artifacts/jmx_prometheus_javaagent-0.3.2.redhat-00003.jar \
            /tmp/artifacts/
        # Copy 'jboss.container.prometheus' module content
        COPY modules/jboss.container.prometheus /tmp/scripts/jboss.container.prometheus
        # Set 'jboss.container.prometheus' module defined environment variables
        ENV \
            AB_PROMETHEUS_JMX_EXPORTER_CONFIG="/opt/jboss/container/prometheus/etc/jmx-exporter-config.yaml" \
            JBOSS_CONTAINER_PROMETHEUS_MODULE="/opt/jboss/container/prometheus" 
        # Custom scripts from 'jboss.container.prometheus' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.prometheus/configure.sh" ]
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.prometheus/backwards_compatibility.sh" ]
###### /
###### END module 'jboss.container.prometheus:7'

###### START module 'jboss.container.jolokia:7'
###### \
        # Copy 'jboss.container.jolokia' module general artifacts
        COPY \
            artifacts/jolokia-jvm-1.6.2.redhat-00002-agent.jar \
            /tmp/artifacts/
        # Copy 'jboss.container.jolokia' module content
        COPY modules/jboss.container.jolokia /tmp/scripts/jboss.container.jolokia
        # Set 'jboss.container.jolokia' module defined environment variables
        ENV \
            AB_JOLOKIA_AUTH_OPENSHIFT="true" \
            AB_JOLOKIA_HTTPS="true" \
            AB_JOLOKIA_PASSWORD_RANDOM="true" \
            JBOSS_CONTAINER_JOLOKIA_MODULE="/opt/jboss/container/jolokia" \
            JOLOKIA_VERSION="1.6.2" 
        # Set 'jboss.container.jolokia' module defined labels
        LABEL \
            io.fabric8.s2i.version.jolokia="1.6.2-redhat-00002" 
        # Exposed ports in 'jboss.container.jolokia' module
        EXPOSE 8778
        # Custom scripts from 'jboss.container.jolokia' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.jolokia/configure.sh" ]
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.jolokia/backward_compatibility.sh" ]
###### /
###### END module 'jboss.container.jolokia:7'

###### START module 'jboss.container.s2i.core.api:1.0'
###### \
        # Set 'jboss.container.s2i.core.api' module defined environment variables
        ENV \
            S2I_SOURCE_DEPLOYMENTS_FILTER="*" 
        # Set 'jboss.container.s2i.core.api' module defined labels
        LABEL \
            io.openshift.s2i.destination="/tmp"  \
            io.openshift.s2i.scripts-url="image:///usr/local/s2i"  \
            org.jboss.container.deployments-dir="/deployments" 
###### /
###### END module 'jboss.container.s2i.core.api:1.0'

###### START module 'jboss.container.s2i.core.bash:1.0'
###### \
        # Copy 'jboss.container.s2i.core.bash' module content
        COPY modules/jboss.container.s2i.core.bash /tmp/scripts/jboss.container.s2i.core.bash
        # Switch to 'root' user to install 'jboss.container.s2i.core.bash' module defined packages
        USER root
        # Install packages defined in the 'jboss.container.s2i.core.bash' module
        RUN yum --setopt=tsflags=nodocs install -y findutils \
            && rpm -q findutils
        # Set 'jboss.container.s2i.core.bash' module defined environment variables
        ENV \
            JBOSS_CONTAINER_S2I_CORE_MODULE="/opt/jboss/container/s2i/core/" 
        # Custom scripts from 'jboss.container.s2i.core.bash' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.s2i.core.bash/configure.sh" ]
###### /
###### END module 'jboss.container.s2i.core.bash:1.0'

###### START module 'jboss.container.maven.api:1.0'
###### \
###### /
###### END module 'jboss.container.maven.api:1.0'

###### START module 'jboss.container.java.jvm.api:1.0'
###### \
###### /
###### END module 'jboss.container.java.jvm.api:1.0'

###### START module 'jboss.container.proxy.api:2.0'
###### \
###### /
###### END module 'jboss.container.proxy.api:2.0'

###### START module 'jboss.container.java.proxy.bash:2.0'
###### \
        # Copy 'jboss.container.java.proxy.bash' module content
        COPY modules/jboss.container.java.proxy.bash /tmp/scripts/jboss.container.java.proxy.bash
        # Set 'jboss.container.java.proxy.bash' module defined environment variables
        ENV \
            JBOSS_CONTAINER_JAVA_PROXY_MODULE="/opt/jboss/container/java/proxy" 
        # Custom scripts from 'jboss.container.java.proxy.bash' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.java.proxy.bash/configure.sh" ]
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.java.proxy.bash/backward_compatibility.sh" ]
###### /
###### END module 'jboss.container.java.proxy.bash:2.0'

###### START module 'jboss.container.java.jvm.bash:1.0'
###### \
        # Copy 'jboss.container.java.jvm.bash' module content
        COPY modules/jboss.container.java.jvm.bash /tmp/scripts/jboss.container.java.jvm.bash
        # Set 'jboss.container.java.jvm.bash' module defined environment variables
        ENV \
            JBOSS_CONTAINER_JAVA_JVM_MODULE="/opt/jboss/container/java/jvm" 
        # Custom scripts from 'jboss.container.java.jvm.bash' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.java.jvm.bash/configure.sh" ]
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.java.jvm.bash/backward_compatibility.sh" ]
###### /
###### END module 'jboss.container.java.jvm.bash:1.0'

###### START module 'jboss.container.maven:7.0.3.6'
###### \
        # Copy 'jboss.container.maven' module content
        COPY modules/jboss.container.maven /tmp/scripts/jboss.container.maven
        # Switch to 'root' user to install 'jboss.container.maven' module defined packages
        USER root
        # Install packages defined in the 'jboss.container.maven' module
        RUN yum --setopt=tsflags=nodocs install -y rh-maven36 \
            && rpm -q rh-maven36
        # Set 'jboss.container.maven' module defined environment variables
        ENV \
            JBOSS_CONTAINER_MAVEN_36_MODULE="/opt/jboss/container/maven/36/" \
            MAVEN_VERSION="3.6" 
        # Set 'jboss.container.maven' module defined labels
        LABEL \
            io.fabric8.s2i.version.maven="3.6" 
        # Custom scripts from 'jboss.container.maven' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.maven/configure.sh" ]
###### /
###### END module 'jboss.container.maven:7.0.3.6'

###### START module 'jboss.container.util.logging.bash:1.0'
###### \
        # Copy 'jboss.container.util.logging.bash' module content
        COPY modules/jboss.container.util.logging.bash /tmp/scripts/jboss.container.util.logging.bash
        # Set 'jboss.container.util.logging.bash' module defined environment variables
        ENV \
            JBOSS_CONTAINER_UTIL_LOGGING_MODULE="/opt/jboss/container/util/logging/" 
        # Custom scripts from 'jboss.container.util.logging.bash' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.util.logging.bash/configure.sh" ]
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.util.logging.bash/backward_compatibility.sh" ]
###### /
###### END module 'jboss.container.util.logging.bash:1.0'

###### START module 'jboss.container.maven.default:1.0'
###### \
        # Copy 'jboss.container.maven.default' module content
        COPY modules/jboss.container.maven.default /tmp/scripts/jboss.container.maven.default
        # Switch to 'root' user to install 'jboss.container.maven.default' module defined packages
        USER root
        # Install packages defined in the 'jboss.container.maven.default' module
        RUN yum --setopt=tsflags=nodocs install -y findutils \
            && rpm -q findutils
        # Set 'jboss.container.maven.default' module defined environment variables
        ENV \
            JBOSS_CONTAINER_MAVEN_DEFAULT_MODULE="/opt/jboss/container/maven/default/" 
        # Custom scripts from 'jboss.container.maven.default' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.maven.default/configure.sh" ]
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.maven.default/backward_compatibility.sh" ]
###### /
###### END module 'jboss.container.maven.default:1.0'

###### START module 'jboss.container.maven.s2i:1.0'
###### \
        # Copy 'jboss.container.maven.s2i' module content
        COPY modules/jboss.container.maven.s2i /tmp/scripts/jboss.container.maven.s2i
        # Set 'jboss.container.maven.s2i' module defined environment variables
        ENV \
            JBOSS_CONTAINER_MAVEN_S2I_MODULE="/opt/jboss/container/maven/s2i" 
        # Custom scripts from 'jboss.container.maven.s2i' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.maven.s2i/configure.sh" ]
###### /
###### END module 'jboss.container.maven.s2i:1.0'

###### START module 'jboss.container.java.run.bash:1.0'
###### \
        # Copy 'jboss.container.java.run.bash' module content
        COPY modules/jboss.container.java.run.bash /tmp/scripts/jboss.container.java.run.bash
        # Switch to 'root' user to install 'jboss.container.java.run.bash' module defined packages
        USER root
        # Install packages defined in the 'jboss.container.java.run.bash' module
        RUN yum --setopt=tsflags=nodocs install -y nss_wrapper \
            && rpm -q nss_wrapper
        # Set 'jboss.container.java.run.bash' module defined environment variables
        ENV \
            JAVA_DATA_DIR="/deployments/data" \
            JBOSS_CONTAINER_JAVA_RUN_MODULE="/opt/jboss/container/java/run" \
            LD_PRELOAD="libnss_wrapper.so" \
            NSS_WRAPPER_GROUP="/etc/group" \
            NSS_WRAPPER_PASSWD="/home/jboss/passwd" 
        # Custom scripts from 'jboss.container.java.run.bash' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.java.run.bash/configure.sh" ]
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.java.run.bash/backward_compatibility.sh" ]
###### /
###### END module 'jboss.container.java.run.bash:1.0'

###### START module 'jboss.container.java.s2i.bash:1.0'
###### \
        # Copy 'jboss.container.java.s2i.bash' module content
        COPY modules/jboss.container.java.s2i.bash /tmp/scripts/jboss.container.java.s2i.bash
        # Set 'jboss.container.java.s2i.bash' module defined environment variables
        ENV \
            JBOSS_CONTAINER_JAVA_S2I_MODULE="/opt/jboss/container/java/s2i" \
            S2I_SOURCE_DEPLOYMENTS_FILTER="*.jar" 
        # Custom scripts from 'jboss.container.java.s2i.bash' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.java.s2i.bash/configure.sh" ]
###### /
###### END module 'jboss.container.java.s2i.bash:1.0'

###### START module 'jboss.container.java.singleton-jdk:1.0'
###### \
        # Copy 'jboss.container.java.singleton-jdk' module content
        COPY modules/jboss.container.java.singleton-jdk /tmp/scripts/jboss.container.java.singleton-jdk
        # Custom scripts from 'jboss.container.java.singleton-jdk' module
        USER root
        RUN [ "sh", "-x", "/tmp/scripts/jboss.container.java.singleton-jdk/configure.sh" ]
###### /
###### END module 'jboss.container.java.singleton-jdk:1.0'

###### START image 'openjdk/openjdk-11-rhel7:1.1'
###### \
        # Set 'openjdk/openjdk-11-rhel7' image defined environment variables
        ENV \
            JBOSS_IMAGE_NAME="openjdk/openjdk-11-rhel7" \
            JBOSS_IMAGE_VERSION="1.1" \
            PATH="$PATH:"/usr/local/s2i"" 
        # Set 'openjdk/openjdk-11-rhel7' image defined labels
        LABEL \
            com.redhat.component="openjdk-11-rhel7-container"  \
            description="Source To Image (S2I) image for Red Hat OpenShift providing OpenJDK 11"  \
            io.cekit.version="3.6.0"  \
            io.k8s.description="Platform for building and running plain Java applications (fat-jar and flat classpath)"  \
            io.k8s.display-name="Java Applications"  \
            io.openshift.tags="builder,java"  \
            maintainer="Red Hat OpenJDK <openjdk@redhat.com>"  \
            name="openjdk/openjdk-11-rhel7"  \
            summary="Source To Image (S2I) image for Red Hat OpenShift providing OpenJDK 11"  \
            usage="https://access.redhat.com/documentation/en-us/red_hat_jboss_middleware_for_openshift/3/html/red_hat_java_s2i_for_openshift/"  \
            version="1.1" 
        # Exposed ports in 'openjdk/openjdk-11-rhel7' image
        EXPOSE 8080 8443
###### /
###### END image 'openjdk/openjdk-11-rhel7:1.1'


    # Switch to 'root' user and remove artifacts and modules
    USER root
    RUN [ ! -d /tmp/scripts ] || rm -rf /tmp/scripts
    RUN [ ! -d /tmp/artifacts ] || rm -rf /tmp/artifacts

    # Clear package manager metadata
    RUN yum clean all && [ ! -d /var/cache/yum ] || rm -rf /var/cache/yum

    # Define the user
    USER 185
    # Define the working directory
    WORKDIR /home/jboss
    # Define run cmd
    CMD ["/usr/local/s2i/run"]
    ADD help.md /
## /
## END target image
